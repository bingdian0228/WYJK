@model PagedResult<FinanceOrder>
@{
    var memberList = ViewData["memberList"] as List<Members>;
}
@section Header
{
    <script type="text/javascript" src="/Content/lib/laypage/1.3/laypage.js"></script>

}
@section Footer
{
    <script type="text/javascript">
        laypage({
            cont: $('#pager'),
            skin: '#AF0000', //皮肤
            pages: '@Model.TotalPageCount', //可以叫服务端把总页数放在某一个隐藏域，再获取。假设我们获取到的是18
            curr: function () { //通过url获取当前页，也可以同上（pages）方式获取
                var page = location.search.match(/PageIndex=(\d+)/);
                return page ? page[1] : 1;
            }(),
            jump: function (e, first) { //触发分页后的回调
                if (!first) { //一定要加此判断，否则初始时会无限刷新
                    location.href = '?PageIndex=' + e.curr + '&MemberID=' + '@Request.Params["MemberID"]' + '&OrderCode=' + '@Request.Params["OrderCode"]' + '&Status=' + '@Request.Params["Status"]';
                }
            }
        });

        $(function () {

            $(".Huialert.Huialert-info").fadeOut(2000);

            $(".action-pass").click(function () {
                if ($("input[type='checkbox']:checked").length <= 0) {
                    layer.msg("请选择需要操作的信息");
                    return;
                }

                layer.confirm('确定通过该项吗？', { btn: ['确定', '取消'] },
                    function () {
                        var OrderCodes = [];
                        $("input[type='checkbox']:checked").each(function (i) {
                            OrderCodes[i] = $(this).val();
                        });
                        var index = layer.load(1, {
                            shade: [0.1, '#000']
                        });

                        $.ajax({
                            url: "@Url.Action("BatchAuditing", "Order")?OrderCodeStr=" + OrderCodes + "&Type=0",
                            //data: { "OrderCodes": OrderCodes, "Type": 0 },
                            dataType: "json",
                            type: "GET",
                            success: function (data) {
                                layer.close(index);
                                if (data.status) {
                                    layer.msg("审核成功");
                                    refresh();
                                } else {
                                    layer.msg("审核失败");
                                }
                            },
                            error: function () {
                                layer.close(index);
                                layer.msg("出现异常");
                            }
                        });
                    })
            });
        })
    </script>
}
<nav class="breadcrumb"><i class="Hui-iconfont">&#xe67f;</i> 首页 <span class="c-gray en">&gt;</span> 财务审核 <span class="c-gray en">&gt;</span> 订单列表 <a class="btn btn-success radius r mr-20" style="line-height:1.6em;margin-top:3px" href="javascript:location.replace(location.href);" title="刷新"><i class="Hui-iconfont">&#xe68f;</i></a></nav>
<div class="pd-20">
    <div class="text-c">
        @*代理机构、订单号、审核状态*@
        @using (Html.BeginForm("GetOrderList", "Order", FormMethod.Get))
        {
            <text>代理机构</text>
            <span class="select-box inline">
                @{
                    var list = new List<SelectListItem> { new SelectListItem { Text = "全部", Value = "" } };
                    list.AddRange(memberList.Select(item => new SelectListItem
                    {
                        Text = item.MemberName,
                        Value = item.MemberID.ToString()
                    }));
                }
                @Html.DropDownList("MemberID", list, new { @class = "select" })
            </span>
            @:订单编号： @Html.TextBox("OrderCode", null, new { style = "width:250px", @class = "input-text", placeholder = "订单编号" })
                    @:审核状态
                    <span class="select-box inline">
                        @{
                            var list1 = new List<SelectListItem> { new SelectListItem { Text = "全部", Value = "" } };
                            List<SelectListItem> list2 = EnumExt.GetSelectList(typeof(OrderEnum));
                            list2.RemoveAt(0);
                            list1.AddRange(list2);
                        }
                        @Html.DropDownList("Status", list1, new { @class = "select" })
                    </span>

                    <button name="" id="" class="btn btn-success" type="submit"><i class="Hui-iconfont">&#xe665;</i> 查询</button>

                            }


    </div>
    <div class="mt-20">
        @if (!string.IsNullOrWhiteSpace(TempData["Message"] + ""))
        {
            <div class="Huialert Huialert-info">@(TempData["Message"])</div>
        }
        <table class="table table-border table-bordered table-bg table-hover table-sort">
            <thead>
                <tr class="text-c">
                    <th width="25"><input type="checkbox" name="" value=""></th>
                    <th width="80">订单号</th>
                    <th width="80">交费时间</th>
                    <th width="80">用户类型</th>
                    <th width="80">代理机构</th>
                    <th width="80">缴费人数</th>
                    <th width="80">交费来源</th>
                    <th width="80">总额</th>
                    <th width="80">审核状态</th>
                    <th width="80">操作</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items)
                {
                    <tr class="text-c">
                        <td><input type="checkbox" value="@item.OrderCode" name=""></td>
                        <td>@item.OrderCode</td>
                        <td>@item.PayTime.ToString("yyyy/MM/dd HH:mm")</td>
                        <td>@EnumExt.GetEnumCustomDescription((UserTypeEnum)item.UserType.AsInt())</td>
                        <td>@(item.UserType == "0" ? item.MemberName : (item.UserType == "1" ? item.EnterpriseName : item.BusinessName))</td>
                        @*<td>@item.MemberName</td>*@
                        <td>@item.payUserCount</td>
                        <td>@item.PaymentMethod</td>
                        <td>@item.Amounts</td>
                        <td>@EnumExt.GetEnumCustomDescription((OrderEnum)item.Status.AsInt())</td>
                        <td><a title="详情" href='@Url.Action("GetSubOrderList","Order")?OrderCode=@item.OrderCode' class="ml-5" style="text-decoration:none"><i class="Hui-iconfont">&#xe665;</i></a></td>
                    </tr>
                }
            </tbody>
        </table>
        <div id="pager" style="margin-top: 20px;"></div>
    </div>
    <div class="cl pd-5 bg-1 bk-gray mt-20">
            @if (Request.Params["Status"] == Convert.ToInt32(OrderEnum.Auditing).ToString())
            {
                <span class="l">
                    <a href="javascript:;" class="btn btn-primary radius action-pass"><i class="Hui-iconfont">&#xe6e1;</i>审核通过</a>
                    @*<a href="javascript:;" class="btn btn-danger radius action-fail"><i class="Hui-iconfont">&#xe6dd;</i>不通过</a>*@
                </span>
            }
            <span class="r">共有数据：<strong>@Model.TotalItemCount</strong> 条</span>
        </div>
    </div>