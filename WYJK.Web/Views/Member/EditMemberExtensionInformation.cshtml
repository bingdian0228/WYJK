@model ExtensionInformationParameter
@{

}
@section Footer{
    <script src="~/Content/lib/laydate-master/laydate.dev.js"></script>
    <script type="text/javascript">
        $(function () {
            if ('@Request.Params["type"]' == 1) {
                $('input,select,textarea', $('form')).attr('disabled', true);
                $('button', $('form')).css('display', 'none');
            }

        })

        laydate({
            elem: '#J-xl'
        });
    </script>
    <style>
        span.lineheight {
            line-height: 31px;
        }
    </style>
}
@if (!string.IsNullOrWhiteSpace(TempData["Message"] + ""))
{
    <div class="Huialert Huialert-info">@TempData["Message"]</div>
}
<div class="pd-20">
    <form action='@Url.Action("EditMemberExtensionInformation", "Member")' method="post" class="form form-horizontal" id="form-article-add">
        @Html.HiddenFor(n => n.MemberID)
        @if (Model.MemberID == 0)
        {
            <div class="row cl">
                <label class="form-label col-2">用户名：</label>
                <div class="formControls col-2">
                    @Html.TextBoxFor(m => m.MemberName, new { @class = "input-text" })     
                    @Html.ValidationMessageFor(m => m.MemberName)               
                </div>                
                <label class="form-label col-2">密码：</label>
                <div class="formControls col-2">
                    @Html.TextBoxFor(m => m.Password, new { @class = "input-text" })
                    @Html.ValidationMessageFor(m => m.Password)
                </div>                
            </div>
            <div class="row cl">
                <label class="form-label col-2">手机号：</label>
                <div class="formControls col-2">
                    @Html.TextBoxFor(m => m.MemberPhone, new { @class = "input-text" })
                    @Html.ValidationMessageFor(m => m.MemberPhone)
                </div>
                <label class="form-label col-2">邀请码：</label>
                <div class="formControls col-2">
                    @Html.TextBoxFor(m => m.InviteCode, new { @class = "input-text" })
                </div>
            </div>
        }
        @*<div class="row cl">
            <label class="form-label col-2">政治面貌：</label>
            <div class="formControls col-2">
                @Html.DropDownListFor(m => m.PoliticalStatus, ViewData["PoliticalStatus"] as List<SelectListItem>, new { @class = "input-text" })
            </div>
            <label class="form-label col-2">学历：</label>
            <div class="formControls col-2">
                @Html.DropDownListFor(m => m.Education, ViewData["Education"] as List<SelectListItem>, new { @class = "input-text" })
            </div>
        </div>*@
        <div class="row cl">
            <label class="form-label col-2">真实姓名：</label>
            <div class="formControls col-6">
                @Html.TextBoxFor(m => m.TrueName, new { @class = "input-text" })
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-2">证件类型：</label>
            <div class="formControls col-2">
                @Html.DropDownListFor(m => m.CertificateType, ViewData["CertificateType"] as List<SelectListItem>, new { @class = "input-text" })

            </div>
            <label class="form-label col-2">证件号码：</label>
            <div class="formControls col-2">
                @Html.TextBoxFor(m => m.CertificateNo, new { @class = "input-text" })
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-2">政治面貌：</label>
            <div class="formControls col-2">
                @Html.DropDownListFor(m => m.PoliticalStatus, ViewData["PoliticalStatus"] as List<SelectListItem>, new { @class = "input-text" })
            </div>
            <label class="form-label col-2">学历：</label>
            <div class="formControls col-2">
                @Html.DropDownListFor(m => m.Education, ViewData["Education"] as List<SelectListItem>, new { @class = "input-text" })
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-2">生日：</label>
            <div class="formControls col-2">
                @Html.TextBox("Birthday", Model.Birthday == null ? "" : Model.Birthday.Value.ToShortDateString(), new { id = "J-xl", @class = "input-text" })
            </div>
            <label class="form-label col-2">性别：</label>
            <div class="formControls col-5 skin-minimal">
                <div class="radio-box">
                    @Html.RadioButtonFor(m => m.Sex, 0, new { id = "sex-1" })
                    <label for="sex-1">男</label>
                </div>
                <div class="radio-box">
                    @Html.RadioButtonFor(m => m.Sex, 1, new { id = "sex-2" })
                    <label for="sex-2">女</label>
                </div>
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-2">居住地址：</label>
            <div class="formControls col-2">
                @Html.TextBoxFor(m => m.Address, new { @class = "input-text" })
            </div>
            <label class="form-label col-2">手机号码：</label>
            <div class="formControls col-2">
                @Html.TextBoxFor(m => m.Phone, new { @class = "input-text" })
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-2">邮箱：</label>
            <div class="formControls col-2">
                @Html.TextBoxFor(m => m.Email, new { @class = "input-text" })
            </div>
            <label class="form-label col-2">QQ：</label>
            <div class="formControls col-2">
                @Html.TextBoxFor(m => m.QQ, new { @class = "input-text" })
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-2">支付宝账号：</label>
            <div class="formControls col-2">
                @Html.TextBoxFor(m => m.Alipay, new { @class = "input-text" })
            </div>
            <label class="form-label col-2">银行卡号：</label>
            <div class="formControls col-2">
                @Html.TextBoxFor(m => m.BankCardNo, new { @class = "input-text" })
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-2">开户行：</label>
            <div class="formControls col-2">
                @Html.TextBoxFor(m => m.BankAccount, new { @class = "input-text" })
            </div>
            <label class="form-label col-2">开户人：</label>
            <div class="formControls col-2">
                @Html.TextBoxFor(m => m.UserAccount, new { @class = "input-text" })
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-2">第二联系人：</label>
            <div class="formControls col-2">
                @Html.TextBoxFor(m => m.SecondContact, new { @class = "input-text" })
            </div>
            <label class="form-label col-2">第二联系人手机：</label>
            <div class="formControls col-2">
                @Html.TextBoxFor(m => m.SecondContactPhone, new { @class = "input-text" })
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-2">投保地：</label>
            <div class="formControls col-2">
                @Html.TextBoxFor(m => m.InsuranceArea, new { @class = "input-text", placeholder = "格式如:山东省|青岛市" })
            </div>
            <label class="form-label col-2">户口性质：</label>
            <div class="formControls col-2">
                @Html.DropDownListFor(m => m.HouseholdType, ViewData["HouseholdType"] as List<SelectListItem>, new { @class = "input-text" })
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-2">密码：</label>
            <div class="formControls col-2">
                <input name="Password" placeholder="不修改密码请留空" class="input-text" />
            </div>
            <label class="form-label col-2">冻结账户：</label>
            <div class="formControls col-2">
                <div class="radio-box">
                    @Html.RadioButtonFor(m => m.IsFrozen, true, new { id = "state-1" })@Html.Label("state-1", "是")
                </div>
                <div class="radio-box">
                    @Html.RadioButtonFor(m => m.IsFrozen, false, new { id = "state-2" })@Html.Label("state-2", "否")
                </div>
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-2">注册电话：</label>
            <div class="formControls col-2">
                @Html.TextBoxFor(m => m.MemberPhone, new { @class = "input-text" })
            </div>
        </div>
        <div class="row cl">
            <div class="col-10 col-offset-2">
                <button class="btn btn-primary radius" type="submit"><i class="Hui-iconfont">&#xe632;</i> 保存</button>
            </div>
        </div>
    </form>
    @if (ViewData["SocialSecurityList"] != null)
    {
        <div class="pd-20">
            <div class="text-c">
                社保列表
            </div>
            <div class="mt-20">
                <table class="table table-border table-bordered table-bg table-hover table-sort">
                    <thead>
                        <tr class="text-c">
                            <th width="80">客户名称</th>
                            <th width="80">身份证</th>
                            <th width="80">起始日期</th>
                            <th width="80">社保交至</th>
                            <th width="80">基数</th>
                            <th width="80">比例</th>
                            <th width="80">每月交费</th>
                            <th width="120">状态</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var socialSecurity in ViewData["SocialSecurityList"] as List<SocialSecurityShowModel>)
                {
                            <tr class="text-c">
                                <td>@socialSecurity.SocialSecurityPeopleName</td>
                                <td>@socialSecurity.IdentityCard</td>
                                <td>@socialSecurity.PayTime.ToString("yyyy/MM")</td>
                                <td>@socialSecurity.PayTime.AddMonths(socialSecurity.PayMonthCount+socialSecurity.AlreadyPayMonthCount - 1).ToString("yyyy/MM")</td>
                                <td>@socialSecurity.SocialSecurityBase.ToString("N2")</td>
                                <td>@socialSecurity.PayProportion.ToString("N2")</td>
                                <td>@Convert.ToDecimal(socialSecurity.SocialSecurityBase * socialSecurity.PayProportion / 100).ToString("N2")</td>
                                <td class="td-status"><span class="label label-success radius">@EnumExt.GetEnumCustomDescription((SocialSecurityStatusEnum)(Convert.ToInt32(socialSecurity.Status)))</span></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    @if (ViewData["AccumulationFundList"] != null)
    {

        <div class="pd-20">
            <div class="text-c">
                公积金列表
            </div>
            <div class="mt-20">
                <table class="table table-border table-bordered table-bg table-hover table-sort">
                    <thead>
                        <tr class="text-c">
                            <th width="80">客户名称</th>
                            <th width="80">身份证</th>
                            <th width="80">起始日期</th>
                            <th width="80">社保交至</th>
                            <th width="80">基数</th>
                            <th width="80">比例</th>
                            <th width="80">每月交费</th>
                            <th width="120">状态</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var accumulationFund in ViewData["AccumulationFundList"] as List<AccumulationFundShowModel>)
                        {
                            <tr class="text-c">
                                <td>@accumulationFund.SocialSecurityPeopleName</td>
                                <td>@accumulationFund.IdentityCard</td>
                                <td>@accumulationFund.PayTime.ToString("yyyy/MM")</td>
                                <td>@accumulationFund.PayTime.AddMonths(accumulationFund.PayMonthCount + accumulationFund.AlreadyPayMonthCount - 1).ToString("yyyy/MM")</td>
                                <td>@accumulationFund.AccumulationFundBase.ToString("N2")</td>
                                <td>@accumulationFund.PayProportion.ToString("N2")</td>
                                <td>@Convert.ToDecimal(accumulationFund.AccumulationFundBase * accumulationFund.PayProportion / 100).ToString("N2")</td>
                                <td class="td-status"><span class="label label-success radius">@EnumExt.GetEnumCustomDescription((SocialSecurityStatusEnum)(Convert.ToInt32(accumulationFund.Status)))</span></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>